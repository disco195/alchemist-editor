{"version":3,"sources":["../ //.md$","example/queue/readme.md","serviceWorker.js","index.tsx","App.tsx","pages/header/index.tsx","pages/footer/index.tsx","pages/main/left/index.tsx","components/Editor.tsx","pages/main/right/index.tsx","pages/main/mid/index.tsx","pages/main/index.tsx","pages/index.tsx"],"names":["map","./readme.md","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","r","__webpack_exports__","Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","demo","onChange","newValue","execute","parentHTML","innerHTML","t","bind","alchemist","Index","_alchemist$Index","_Users_dozhou_workspace_dozhou_alchemist_editor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_dozhou_workspace_dozhou_alchemist_editor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_dozhou_workspace_dozhou_alchemist_editor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","_Users_dozhou_workspace_dozhou_alchemist_editor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","Stack","_alchemist$Stack","size","Queue","_alchemist$Queue","eval","error","console","message","react__WEBPACK_IMPORTED_MODULE_4___default","Fragment","_pages__WEBPACK_IMPORTED_MODULE_6__","fontSize","defaultValue","style","backgroundColor","textAlign","Header","Footer","objectSpread","flex","order","height","overflow","left","lib","enable","right","Editor","props","lib_default","width","mode","theme","editorProps","$blockScrolling","setOptions","fontFamily","dragEnabled","dragDelay","styles","layout","icon","chip","color","nav","borderBottom","minWidth","Chip_default","avatar","Code_default","label","Add_default","PlayArrow_default","onClick","tt","require","webpackMarkdownLoader","mid","react_markdown_default","source","default","display","main","minHeight","flexDirection","header","footer"],"mappings":"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","file":"static/js/main.9f3be020.chunk.js","sourcesContent":["var map = {\n\t\"./readme.md\": 264\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 263;","export default \"### Algorithms and Data Structures\\n---\\n\\n<blockquote>\\n  This blockquote will change based on the HTML settings above.\\n</blockquote>\\n\\n#### Queue<T>\\n\\n- offer(t: T): void\\n- poll(): T\\n- peek(): T\\n- size(): number\\n- isEmpty(): boolean\\n\\n#### Stack<T>\\n\\n- push(t: T): void\\n- pop(): T\\n- peek(): T\\n- size(): number\\n- isEmpty(): boolean\\n\"","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"./App.css\";\nimport Pages from \"./pages\";\n\nlet demo = `// Queue Example\n\nconst capacity = 5;\nconst queue = new Queue(capacity);\n\nfor(let i = 0; i < capacity; i++){\n  queue.offer(i + 1);\n}\n\nfor(let i = 0; i < capacity; i++) {\n  queue.poll();\n}\n\nqueue.start(1000);\n`;\n\nfunction onChange(newValue: any) {\n  demo = newValue;\n}\n\nconst execute = () => {\n\n  const parentHTML = document.getElementById(\"display\") as HTMLElement\n  parentHTML.innerHTML = \"\"\n\n  import(\"alchemist-core\").then(alchemist => {\n    class Index extends alchemist.Index {\n      constructor() {\n        super(parentHTML)\n      }\n    }\n\n    class Stack<T> extends alchemist.Stack<T> {\n      constructor(size?: number, id?: string) {\n        super(parentHTML, size, id);\n      }\n    }\n\n    class Queue<T> extends alchemist.Queue<T> {\n      constructor(size?: number, id?: string) {\n        super(parentHTML, size, id);\n      }\n    }\n\n    try {\n      eval(demo);\n    } catch (error) {\n      console.error(error.message);\n    }\n  })\n}\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Pages onChange={onChange} fontSize={14} defaultValue={demo} execute={execute} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\nconst style = {\n    backgroundColor: \"#073642\",\n    textAlign: \"center\",\n} as React.CSSProperties;\n\nconst Header = () => (\n    <header style={style}>\n    </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst style = {\n    backgroundColor: \"#073642\",\n    textAlign: \"center\",\n} as React.CSSProperties;\n\nconst Footer = () => (\n    <footer style={style}>\n        ALGORITHMS AND DATA STRUCTERS VISUALIZATION ONLINE EDITOR\n    </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Resizable from \"re-resizable\";\n\nconst layoutStyle = {\n    flex: 1,\n    order: -1,\n    height: \"100%\",\n    overflow: \"hidden\"\n};\n\nconst style = {\n    ...layoutStyle,\n    backgroundColor: \"#002B36\",\n};\n\nexport default () => (\n    <Resizable enable={{ right: true }}>\n        <nav style={style}>\n            Queue\n            Stack\n        </nav>\n    </Resizable>\n);\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"brace/mode/javascript\";\nimport \"brace/theme/solarized_dark\";\n\nconst mode = \"javascript\";\nconst theme = \"solarized_dark\";\nconst fontFamily = \"'Courier New', Menlo, Monaco, monospace\";\n\nexport interface Props {\n    onChange: (value: string, event?: any) => void;\n    defaultValue: string;\n    fontSize: number;\n}\n\nexport default (props: Props) => (\n    <AceEditor\n        width={\"100%\"}\n        height={\"100%\"}\n        mode={mode}\n        theme={theme}\n        onChange={props.onChange}\n        defaultValue={props.defaultValue}\n        fontSize={props.fontSize}\n        editorProps={{\n            $blockScrolling: false,\n        }}\n        setOptions={{\n            fontFamily,\n            dragEnabled: true,\n            dragDelay: 100\n        }}\n    />\n);\n","import React from \"react\";\nimport Resizable from \"re-resizable\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Code from \"@material-ui/icons/Code\";\nimport Add from \"@material-ui/icons/Add\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\n\nimport Editor, { Props as EditorProps } from \"../../../components/Editor\";\n\ninterface Props extends EditorProps {\n    execute: () => any;\n}\n\nconst styles = {\n    layout: {\n        flex: 1,\n        height: \"100%\",\n        overflow: \"hidden\",\n        backgroundColor: \"#002B36\"\n    },\n    icon: {\n        width: 20,\n        height: 20,\n    },\n    chip: {\n        color: \"#93A1A1\",\n        backgroundColor: \"transparent\",\n        fontFamily: \"'Courier New', Menlo, Monaco, monospace\",\n    },\n    nav: {\n        borderBottom: \"1px solid #586e75\",\n        minWidth: \"500px\",\n    },\n};\n\nexport default (props: Props) => (\n    <Resizable enable={{ left: true }}>\n        <aside style={styles.layout}>\n            <nav style={styles.nav}>\n                <Chip\n                    avatar={<Code style={styles.icon} />}\n                    label=\"code.js\"\n                    style={styles.chip as React.CSSProperties}\n                />\n                <Chip\n                    avatar={<Code style={styles.icon} />}\n                    label=\"README.md\"\n                    style={styles.chip as React.CSSProperties}\n                />\n                <Chip\n                    avatar={<Add style={styles.icon} />}\n                    label=\"\"\n                    style={styles.chip as React.CSSProperties}\n                />\n                <Chip\n                    avatar={<PlayArrow style={styles.icon} />}\n                    label=\"\"\n                    style={styles.chip as React.CSSProperties}\n                    onClick={props.execute}\n                />\n            </nav>\n            <Editor {...props} />\n        </aside>\n    </Resizable>\n);\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\n// npm i -D @types/webpack-env\nconst webpackMarkdownLoader = require.context(`!raw-loader!../../../example/queue/`, false, /\\.md$/, );\n\nconst tt = webpackMarkdownLoader(\"./readme.md\");\n\nconst layoutStyle = {\n    flex: 1,\n    overflow: \"hidden\"\n};\n\nconst style = {\n    ...layoutStyle,\n    backgroundColor: \"#586e75\",\n    color: \"palegoldenrod\"\n};\n\nexport default () => (\n    <section style={style} id=\"display\">\n        <ReactMarkdown source={tt.default} />\n    </section>\n);\n","import React from 'react';\n\nimport Left from \"./left\";\nimport Right from \"./right\";\nimport Mid from \"./mid\";\nimport { Props as EditorProps } from \"../../components/Editor\";\n\nconst style = {\n    display: 'flex',\n    flex: 1,\n};\n\ninterface Props extends EditorProps {\n    execute: () => any;\n}\n\nexport default (props: Props) => {\n    return (\n        <div style={style}>\n            <Left />\n            <Mid />\n            <Right {...props} />\n        </div>\n    )\n};\n","import React from \"react\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport Main from \"./main\";\nimport { Props as EditorProps } from \"../components/Editor\";\n\nconst style = {\n    display: \"flex\",\n    minHeight: \"100vh\",\n    flexDirection: \"column\"\n} as React.CSSProperties;\n\ninterface Props extends EditorProps {\n    execute: () => any;\n}\n\nconst App = (props: Props) => (\n    <div style={style}>\n        <Header />\n        <Main {...props} />\n        <Footer />\n    </div>\n);\n\nexport default App;\n"],"sourceRoot":""}