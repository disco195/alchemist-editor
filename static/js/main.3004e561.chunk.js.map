{"version":3,"sources":["serviceWorker.js","index.tsx","App.tsx","pages/header/index.tsx","pages/footer/index.tsx","pages/main/left/index.tsx","components/Editor.tsx","pages/main/right/index.tsx","pages/main/mid/index.tsx","pages/main/index.tsx","pages/index.tsx"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_App_css__WEBPACK_IMPORTED_MODULE_1__","_App_css__WEBPACK_IMPORTED_MODULE_1___default","_pages__WEBPACK_IMPORTED_MODULE_2__","demo","onChange","newValue","execute","innerHTML","e","t","bind","alchemist","Stack","Queue","Index","eval","error","console","message","Fragment","fontSize","defaultValue","style","backgroundColor","textAlign","Header","Footer","Object","objectSpread","flex","order","height","overflow","left","lib","enable","right","Editor","props","lib_default","width","mode","theme","editorProps","$blockScrolling","setOptions","fontFamily","dragEnabled","dragDelay","styles","layout","icon","chip","color","nav","borderBottom","minWidth","Chip_default","avatar","Code_default","label","Add_default","PlayArrow_default","onClick","mid","id","display","main","minHeight","flexDirection","header","footer"],"mappings":"sJAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,yFEnInB,IAAAC,mCAAAC,oBAAA,GAAAC,2CAAAD,oBAAAE,EAAAH,oCAAAI,sCAAAH,oBAAA,IAAAI,8CAAAJ,oBAAAE,EAAAC,uCAAAE,oCAAAL,oBAAA,IAIIM,KAAI,6XA2BR,SAASC,SAASC,GAChBF,KAAOE,EAGT,IAAMC,QAAU,SAAVA,UAEHlB,SAASC,eAAe,WAA2BkB,UAAY,GAEhEV,oBAAAW,EAAA,GAAAf,KAAAI,oBAAAY,EAAAC,KAAA,aAAyBjB,KAAK,SAAAkB,WAC5B,IAAMC,MAAQD,UAAUC,MAClBC,MAAQF,UAAUE,MAClBC,MAAQH,UAAUG,MAExB,IACEC,KAAKZ,MACL,MAAOa,OACPC,QAAQD,MAAMA,MAAME,aAKpB/B,IAAM,WACV,OACEW,2CAAAb,EAAAC,cAACY,2CAAAb,EAAMkC,SAAP,KACErB,2CAAAb,EAAAC,cAACgB,oCAAA,EAAD,CAAOE,SAAUA,SAAUgB,SAAU,GAAIC,aAAclB,KAAMG,QAASA,YAK7DnB,+EC1DTmC,EAAQ,CACVC,gBAAiB,UACjBC,UAAW,UAYAC,EARA,kBACXzC,EAAAC,EAAAC,cAAA,UAAQoC,MAAOA,GAAf,mBAEItC,EAAAC,EAAAC,cAAA,WAFJ,WCPEoC,EAAQ,CACVC,gBAAiB,UACjBC,UAAW,UAWAE,EARA,kBACX1C,EAAAC,EAAAC,cAAA,UAAQoC,MAAOA,GAAf,mBAEItC,EAAAC,EAAAC,cAAA,WAFJ,2BCEEoC,EAAKK,OAAAC,EAAA,EAAAD,CAAA,GAPS,CAChBE,KAAM,EACNC,OAAQ,EACRC,OAAQ,OACRC,SAAU,UAGH,CAEPT,gBAAiB,YAGNU,EAAA,kBACXjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAWC,OAAQ,CAAEC,OAAO,IACxBpD,EAAAC,EAAAC,cAAA,OAAKoC,MAAOA,GAAZ,kGCFOe,eAAA,SAACC,GAAD,OACXtD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CACIuD,MAAO,OACPT,OAAQ,OACRU,KAdK,aAeLC,MAdM,iBAeNtC,SAAUkC,EAAMlC,SAChBiB,aAAciB,EAAMjB,aACpBD,SAAUkB,EAAMlB,SAChBuB,YAAa,CACTC,iBAAiB,GAErBC,WAAY,CACRC,WArBO,0CAsBPC,aAAa,EACbC,UAAW,SCjBjBC,EAAS,CACXC,OAAQ,CACJrB,KAAM,EACNE,OAAQ,OACRC,SAAU,SACVT,gBAAiB,WAErB4B,KAAM,CACFX,MAAO,GACPT,OAAQ,IAEZqB,KAAM,CACFC,MAAO,UACP9B,gBAAiB,cACjBuB,WAAY,2CAEhBQ,IAAK,CACDC,aAAc,oBACdC,SAAU,UAIHpB,EAAA,SAACE,GAAD,OACXtD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAWC,OAAQ,CAAEF,MAAM,IACvBjD,EAAAC,EAAAC,cAAA,SAAOoC,MAAO2B,EAAOC,QACjBlE,EAAAC,EAAAC,cAAA,OAAKoC,MAAO2B,EAAOK,KACftE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CACIyE,OAAQ1E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAMqC,MAAO2B,EAAOE,OAC5BS,MAAM,UACNtC,MAAO2B,EAAOG,OAElBpE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CACIyE,OAAQ1E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAMqC,MAAO2B,EAAOE,OAC5BS,MAAM,YACNtC,MAAO2B,EAAOG,OAElBpE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CACIyE,OAAQ1E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAKqC,MAAO2B,EAAOE,OAC3BS,MAAM,GACNtC,MAAO2B,EAAOG,OAElBpE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CACIyE,OAAQ1E,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CAAWqC,MAAO2B,EAAOE,OACjCS,MAAM,GACNtC,MAAO2B,EAAOG,KACdW,QAASzB,EAAMhC,WAGvBtB,EAAAC,EAAAC,cAACmD,EAAWC,MCtDlBhB,EAAKK,OAAAC,EAAA,EAAAD,CAAA,GALS,CAChBE,KAAM,EACNG,SAAU,UAGH,CAEPT,gBAAiB,YAGNyC,EAAA,kBACXhF,EAAAC,EAAAC,cAAA,WAASoC,MAAOA,EAAO2C,GAAG,WAA1B,YCNE3C,EAAQ,CACV4C,QAAS,OACTrC,KAAM,GAOKsC,EAAA,SAAC7B,GACZ,OACItD,EAAAC,EAAAC,cAAA,OAAKoC,MAAOA,GACRtC,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAAC8E,EAAD,MACAhF,EAAAC,EAAAC,cAACkD,EAAUE,KCfjBhB,EAAQ,CACV4C,QAAS,OACTE,UAAW,QACXC,cAAe,UAeJlF,IARH,SAACmD,GAAD,OACRtD,EAAAC,EAAAC,cAAA,OAAKoC,MAAOA,GACRtC,EAAAC,EAAAC,cAACoF,EAAD,MACAtF,EAAAC,EAAAC,cAACiF,EAAS7B,GACVtD,EAAAC,EAAAC,cAACqF,EAAD","file":"static/js/main.3004e561.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"./App.css\";\nimport Pages from \"./pages\";\n\nlet demo = `// Basic stack operators\n\nconst parentHTML = document.getElementById(\"display\");\nconst stack = new Stack(parentHTML, null, \"stack1\");\n\nstack.push(0);\nstack.push(1);\nstack.pop();\n\nstack.push(2);\nstack.pop();\n\nstack.push(3);\nstack.pop();\n\nstack.push(4);\nstack.push(4);\nstack.push(4);\n\nstack.pop();\nstack.pop();\nstack.pop();\nstack.pop();\n\nstack.play(500);\n`;\n\nfunction onChange(newValue: any) {\n  demo = newValue;\n}\n\nconst execute = () => {\n\n  (document.getElementById(\"display\") as HTMLElement).innerHTML = \"\"\n\n  import(\"alchemist-core\").then(alchemist => {\n    const Stack = alchemist.Stack;\n    const Queue = alchemist.Queue;\n    const Index = alchemist.Index;\n\n    try {\n      eval(demo);\n    } catch (error) {\n      console.error(error.message);\n    }\n  })\n}\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Pages onChange={onChange} fontSize={14} defaultValue={demo} execute={execute} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst style = {\n    backgroundColor: \"#073642\",\n    textAlign: \"center\",\n    // borderBottom: \"1px solid #586e75\",\n} as React.CSSProperties;\n\nconst Header = () => (\n    <header style={style}>\n        ALCHEMIST EDITOR\n        <br />\n        HEADER\n    </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst style = {\n    backgroundColor: \"#073642\",\n    textAlign: \"center\",\n} as React.CSSProperties;\n\nconst Footer = () => (\n    <footer style={style}>\n        ALCHEMIST EDITOR\n        <br />\n        FOOTER\n    </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Resizable from \"re-resizable\";\n\nconst layoutStyle = {\n    flex: 1,\n    order: -1,\n    height: \"100%\",\n    overflow: \"hidden\"\n};\n\nconst style = {\n    ...layoutStyle,\n    backgroundColor: \"#002B36\",\n};\n\nexport default () => (\n    <Resizable enable={{ right: true }}>\n        <nav style={style}>\n            nav bar\n        </nav>\n    </Resizable>\n);\n","import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"brace/mode/javascript\";\nimport \"brace/theme/solarized_dark\";\n\nconst mode = \"javascript\";\nconst theme = \"solarized_dark\";\nconst fontFamily = \"'Courier New', Menlo, Monaco, monospace\";\n\nexport interface Props {\n    onChange: (value: string, event?: any) => void;\n    defaultValue: string;\n    fontSize: number;\n}\n\nexport default (props: Props) => (\n    <AceEditor\n        width={\"100%\"}\n        height={\"100%\"}\n        mode={mode}\n        theme={theme}\n        onChange={props.onChange}\n        defaultValue={props.defaultValue}\n        fontSize={props.fontSize}\n        editorProps={{\n            $blockScrolling: false,\n        }}\n        setOptions={{\n            fontFamily,\n            dragEnabled: true,\n            dragDelay: 100\n        }}\n    />\n);\n","import React from \"react\";\nimport Resizable from \"re-resizable\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Code from \"@material-ui/icons/Code\";\nimport Add from \"@material-ui/icons/Add\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\n\nimport Editor, { Props as EditorProps } from \"../../../components/Editor\";\n\ninterface Props extends EditorProps {\n    execute: () => any;\n}\n\nconst styles = {\n    layout: {\n        flex: 1,\n        height: \"100%\",\n        overflow: \"hidden\",\n        backgroundColor: \"#002B36\"\n    },\n    icon: {\n        width: 20,\n        height: 20,\n    },\n    chip: {\n        color: \"#93A1A1\",\n        backgroundColor: \"transparent\",\n        fontFamily: \"'Courier New', Menlo, Monaco, monospace\",\n    },\n    nav: {\n        borderBottom: \"1px solid #586e75\",\n        minWidth: \"500px\",\n    },\n};\n\nexport default (props: Props) => (\n    <Resizable enable={{ left: true }}>\n        <aside style={styles.layout}>\n            <nav style={styles.nav}>\n                <Chip\n                    avatar={<Code style={styles.icon} />}\n                    label=\"code.js\"\n                    style={styles.chip as React.CSSProperties}\n                />\n                <Chip\n                    avatar={<Code style={styles.icon} />}\n                    label=\"README.md\"\n                    style={styles.chip as React.CSSProperties}\n                />\n                <Chip\n                    avatar={<Add style={styles.icon} />}\n                    label=\"\"\n                    style={styles.chip as React.CSSProperties}\n                />\n                <Chip\n                    avatar={<PlayArrow style={styles.icon} />}\n                    label=\"\"\n                    style={styles.chip as React.CSSProperties}\n                    onClick={props.execute}\n                />\n            </nav>\n            <Editor {...props} />\n        </aside>\n    </Resizable>\n);\n","import React from 'react';\n\nconst layoutStyle = {\n    flex: 1,\n    overflow: \"hidden\"\n};\n\nconst style = {\n    ...layoutStyle,\n    backgroundColor: \"#586e75\",\n};\n\nexport default () => (\n    <section style={style} id=\"display\">\n        section\n    </section>\n);\n","import React from 'react';\n\nimport Left from \"./left\";\nimport Right from \"./right\";\nimport Mid from \"./mid\";\nimport { Props as EditorProps } from \"../../components/Editor\";\n\nconst style = {\n    display: 'flex',\n    flex: 1,\n};\n\ninterface Props extends EditorProps {\n    execute: () => any;\n}\n\nexport default (props: Props) => {\n    return (\n        <div style={style}>\n            <Left />\n            <Mid />\n            <Right {...props} />\n        </div>\n    )\n};\n","import React from \"react\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport Main from \"./main\";\nimport { Props as EditorProps } from \"../components/Editor\";\n\nconst style = {\n    display: \"flex\",\n    minHeight: \"100vh\",\n    flexDirection: \"column\"\n} as React.CSSProperties;\n\ninterface Props extends EditorProps {\n    execute: () => any;\n}\n\nconst App = (props: Props) => (\n    <div style={style}>\n        <Header />\n        <Main {...props} />\n        <Footer />\n    </div>\n);\n\nexport default App;\n"],"sourceRoot":""}